Введение
теперь создайте на рабочем столе пустой документ и назовите его Hello.c. В нем напишите

``` # include void main () { printf("Первая программма в Unix! \n"); } ```
Откройте консоль и введите следующие команды ls (позволяет посмотреть, какие пап вам доступны), cd 'Рабочий стол' (позволяет перейти в папку, где лежит Ваш код), gcc Hello.c -o test (компилирует вашу программу в файл с именем test (имя можно менять). /test (запуск кода). Ls (сокращение от list) вывод содержимого каталога. Команда, которая используется для движения по дереву каталогов, называется cd — сокращение от «change directory» («изменить каталог»). GCC - GNU Compiler Collection - набор компиляторов и сопутствующих утилит, GCC входит в состав любого дистрибутива Linux и, как правило, устанавливается по умолчанию. Теперь в каталоге с Hello.c отдадим команду

``` $ gcc hello.c -o hello ```
Появляется файл a.out

``` $ ls a.out hello.c ```
Готовый файл нашей программы. По умолчанию gcc присваивает выходному исполняемому файлу имя a.out

``` $ file a.out ```
Запустим получившийся программный продукт:

``` $ ./a.out hello world ```
(ЭВМ 1ГО поколения) 1943 год бол.таблицы. Расчет 4го года. Балистические ракеты, расчет 4года. Джон Эккер с Джонай Мокли разработали 1ый компьютер Эниак. В 1945 была закончина разработка 1го компа.Скорость одного расчета занимал 5 минут. Построен на лампах. Данные на перфокартах. перепрограммирование на переменных. Десятичное вычисление.

(Архитектра фон Неймана.0 Переход на 2ичыное вычисление. 1 = есть сигнал 0 = нету. Память появляется. Вместо карт. Память это ячейка. У процессора есть доступ к ячейке и её номеру. Коммвнды выполняются последовательно. (ЭВМ 2ГО ПОКОЛЕНИЯ) Первые языки программирования. Переход на транзисторы в 50х годах.
+ транзисторы не выделяют тепло

+ надежность, не перегорают.

+ большая скорость переключения.

+ удобная компоновка деталей.

- Плотная компоновка. Сложных ремонт

- стоимость

- шум Появляются компиляторы. Языки = COBO. ALGOL

(ЭВМ 3-4го поколения)

- Проблемы соединений

- изоляция элементов.

+ производствож

(3Е ПОКОЛЕНИЕ) 60-70е годы. увел.быстродействи и надежность. ускорение ввода. появление магнитного действия. Принцип появления разделения времени. (4ОЕ ПОКОЛЕНИЕ) 70-80х многозадачность виртуальная память. появление концепции баз данных. Размещение всех ИС на одном кристалле. Первый ПК Altair8800. (BSD-UNIX) Вир.машина. Система FFS

(Идеология UNIX) Пишит прог.которые делают все качественно Пишит прог.которые работают вместе поддержка текст.потоки

(Абстракция архитектры) Польз.программы. ядро. Ассемблер. Микрокод. Аппаратно обеспечение.

Коммандная строка
документацию можно прочитать, введя --help

Документация состоит из разделов

1. исполняемые программы

2. функции

3. библиотечные функции

4. специальные файлы

5. форматы файлов

6. игры

7. разное (макросы и соглашения)

8. комманды администрирования

9. процедуры ядра

Редатирование файлов
less - постраничный просмотр и поиск

file, stst - информация о файле

readlink - получить полное имя файла

tail, head - просмотр конца и начала файла. Монитор логов

vi/vim, emacs, nano, mcedit - редактирование текста

split - разбить файл на несколько частей

Файлы
touch - создаёт файл, если он не существует

cp - копирование

mv - перемещение/переименование файла

ln - создаёт ссылки на файлы

alias - создаёт алиас для команды

Удаление файлов
cd - переход в указанную директорию: . - текущая; .. - дир одним уровнем иерархии выше

cd - - переходв предыдущую использованную директорию

ls - отображает содержимое директории

pwd - отображает текущую директорию

readlink - полный путь к файлу

Права файлов
-rwx

- обыйный файл, d директория, l ссылки, s сокеты, r чтение, w запись, x исполнение

Кто и икогда
w - показывает, кто залогинен и чем занят

whe - показывает, кто залогинен

wall - отправляет сообщение на все терминалы

useradd - утилита создания пользователя

userdel - утилита удаление пользователя

usermod - у изменения аккаунтов

date - просмотр, установленной даты

cal, ncal - простой календарь

Потоки ввода/вывода
STDIN(0) - стандартный ввод

STDOUT(1) - стандартный вывод

STDERR(2) - стандартный поток ошибок

< - перенаправление ввода с клавы в файл

> - перенаправление выводас файл в командную строку
